// Code generated by options-setters; DO NOT EDIT.

package runner

import (
	"io"
	"time"
)

type IOGetter interface {
	GetIO() io.Writer
}

func WithIOSetter(s IOGetter) Option {
	return func(cs *Handler) {
		if s != nil {
			cs.write = s.GetIO()
		}
	}
}

type TimeoutGetter interface {
	GetTimeout() time.Duration
}

func WithTimeoutSetter(s TimeoutGetter) Option {
	return func(cs *Handler) {
		if s != nil {
			cs.timeout = s.GetTimeout()
		}
	}
}

// WithConfigurator sets multiple options from
// a single configuration struct that implements
// one or more Getter interfaces
func WithConfigurator(i interface{}) Option {
	return func(cs *Handler) {

		if s, ok := i.(IOGetter); ok {
			cs.write = s.GetIO()
		}

		if s, ok := i.(TimeoutGetter); ok {
			cs.timeout = s.GetTimeout()
		}

	}
}
