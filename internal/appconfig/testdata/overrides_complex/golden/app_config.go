// Code generated by app-config; DO NOT EDIT.

package config

type BaseConfig struct {
	Auth        Auth        `json:"auth" koanf:"auth"`
	Persistence Persistence `json:"persistence" koanf:"persistence"`
	Rag         Rag         `json:"rag" koanf:"rag"`
	Server      Server      `json:"server" koanf:"server"`
	URLManager  URLManager  `json:"url_manager" koanf:"url_manager"`
	Views       Views       `json:"views" koanf:"views"`
}

type Auth struct {
	Roles []Role `json:"roles" koanf:"roles"`
}

type Grants struct {
	Create string `json:"create" koanf:"create"`
	Edit   string `json:"edit" koanf:"edit"`
	View   string `json:"view" koanf:"view"`
}

type Group struct {
	BaseURL string            `json:"base_url" koanf:"base_url"`
	IsRoot  bool              `json:"is_root" koanf:"is_root"`
	Name    string            `json:"name" koanf:"name"`
	Routes  map[string]string `json:"routes" koanf:"routes"`
}

func (g *Group) SetBaseURL(val string) {
	g.BaseURL = val
}

func (g *Group) SetIsRoot(val bool) {
	g.IsRoot = val
}

func (g *Group) SetName(val string) {
	g.Name = val
}

func (g *Group) SetRoutes(val map[string]string) {
	g.Routes = val
}

type Image struct {
	MaxTokens int `json:"max_tokens" koanf:"max_tokens"`
}

type Persistence struct {
	DSN string `json:"dsn" koanf:"dsn"`
}

type Rag struct {
	Image Image `json:"image" koanf:"image"`
}

type Role struct {
	Grants Grants `json:"grants" koanf:"grants"`
	Name   string `json:"name" koanf:"name"`
}

type Server struct {
	ErrorHandler func(err)      `json:"-" koanf:"-"`
	Metadata     map[string]any `json:"metadata" koanf:"metadata"`
	Routes       []string       `json:"routes" koanf:"routes"`
}

func (s *Server) SetErrorHandler(val func(err)) {
	s.ErrorHandler = val
}

func (s *Server) SetMetadata(val map[string]any) {
	s.Metadata = val
}

type URLManager struct {
	Groups []Group `json:"groups" koanf:"groups"`
}

type Views struct {
	CSSPath string `json:"css_path" koanf:"css_path"`
	DirFS   string `json:"dir_fs" koanf:"dir_fs"`
	DirOS   string `json:"dir_os" koanf:"dir_os"`
	JSPath  string `json:"js_path" koanf:"js_path"`
}
